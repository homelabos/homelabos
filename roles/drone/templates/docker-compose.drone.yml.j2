---
version: '3'

networks:
  traefik_network:
    external:
      name: homelabos_traefik
  drone:

services:
  # Drone is a self-service continuous delivery platform
  drone-server:
    image: drone/drone:{{ drone.version }}
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/drone/data:/data"
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - drone
      - traefik_network
    environment:
{% if gitea %}
      - DRONE_GITEA_SERVER=https://{% if gitea.domain %}{{ gitea.domain }}{% else %}{{ gitea.subdomain + "." + domain }}
{% endif %}
      - DRONE_GITEA_CLIENT_ID={{ drone.gitea_id }}
      - DRONE_GITEA_CLIENT_SECRET={{ drone.gitea_secret }}
{% endif %}
      - DRONE_USER_CREATE=username:{{ default_username }},admin:true
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_RPC_SECRET={{ lookup('password', './settings/passwords/drone_secret length=32 chars=ascii_letters,digits') }}
      - DRONE_SERVER_PROTO=https
      - DRONE_SERVER_HOST={% if drone.domain %}{{ drone.domain }}{% else %}{{ drone.subdomain + "." + domain }}
{% endif %}
      - DRONE_DATABASE_SECRET={{ lookup('password', './settings/passwords/drone_database-secret length=32 chars=ascii_letters,digits') }}
      - DRONE_TLS_AUTOCERT=false
    labels:
      - "traefik.http.services.drone.loadbalancer.server.scheme=http"
      - "traefik.http.services.drone.loadbalancer.server.port=80"
{% include './labels.j2' %}

  drone-agent:
    image: drone/agent:{{ drone.agent_version }}
    restart: unless-stopped
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - drone
    environment:
      - DRONE_RPC_HOST=drone-server:80
      - DRONE_RPC_SECRET={{lookup('password', './settings/passwords/drone_secret length=32 chars=ascii_letters,digits')}}
      - DRONE_MAX_PROCS=1
